{"version":3,"sources":["components/Header.js","components/Resume.js","components/resumeData.js","components/About.js","components/Footer.js","components/Portfolio.js","components/Testimonials.js","components/ContactUs.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","socialLinks","map","item","key","name","url","target","Component","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","MonthOfLeaving","YearOfLeaving","Achievement1","Achievement2","Achievement3","Achievement4","research","skills","Element1","Element2","Element3","Element4","Element5","Element6","Element7","Element8","imagebaseurl","linkedinId","aboutme","website","About","src","alt","style","color","Footer","App","Header_Header","About_About","Resume_Resume","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35e97212.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">About me</a></li>\n             <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Portfolio</a></li>\n               <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">Rishikesh Balaji</h1>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default  class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n\n\n      <div className=\"row education\">\n\n      <div className=\"three columns header-col\">\n        <h1><span>Education</span></h1>\n      </div>\n\n      <div className=\"nine columns main-col\">\n        {\n          resumeData.education && resumeData.education.map((item)=>{\n            return(\n              <div className=\"row item\">\n                <div className=\"twelve columns\">\n                    <h3>{item.UniversityName}</h3>\n                    <p className=\"info\">\n                    {item.specialization}\n                    <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                    <p>\n                    {item.Achievements}\n                    </p>\n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n      </div>\n         \n        <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Experience</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.work && resumeData.work.map((item) => {\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                          <p>\n                          <ul>\n                              <li>{item.Achievement1}</li>\n                              <li>{item.Achievement2}</li>\n                              <li>{item.Achievement3}</li>\n                              <li>{item.Achievement4}</li>\n\n                        </ul>\n                          </p>\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div> \n         </div>\n         <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Research</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.research && resumeData.research.map((item) => {\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                          <p>\n                          <ul>\n                              <li>{item.Achievement1}</li>\n                              <li>{item.Achievement2}</li>\n                              <li>{item.Achievement3}</li>\n                              <li>{item.Achievement4}</li>\n\n                        </ul>\n                          </p>\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div> \n         </div>\n         \n         <div className=\"row education\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Skills</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.skills && resumeData.skills.map((item)=>{\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p>\n                            <ul>\n                              <li>{item.Element1}</li>\n                              <li>{item.Element2}</li>\n                              <li>{item.Element3}</li>\n                              <li>{item.Element4}</li>\n                              <li>{item.Element5}</li>\n                              <li>{item.Element6}</li>\n                              <li>{item.Element7}</li>\n                              <li>{item.Element8}</li>\n\n\n                            </ul>\n                          </p>\n                       </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n         </div>\n{/* \n\n         <div className=\"row skill\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Skills</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <p>\n               {resumeData.skillsDescription}\n               </p>\n\n   \t\t\t\t<div className=\"bars\">\n\n   \t\t\t\t   <ul className=\"skills\">\n                {\n                  resumeData.skills && resumeData.skills.map((item) => {\n                    return(\n                      <li>\n                      <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\n                      </span><em>{item.skillname}</em>\n                      </li>\n                    )\n                  })\n                }\n\n   \t\t\t\t\t</ul>\n\n   \t\t\t\t</div>\n\n   \t\t\t</div>\n\n         </div> */}\n\n\n      </section>\n    );\n  }\n}","let resumeData = {\n  \"imagebaseurl\":\"https://rbalaji3.github.io/\",\n  \"name\": \"Rishikesh Balaji\",\n  \"linkedinId\":\"https://www.linkedin.com/in/rishikeshb3/\",\n  \"socialLinks\":[\n      {\n        \"name\":\"linkedin\",\n        \"url\":\"https://www.linkedin.com/in/rishikeshb3/\",\n        \"className\":\"fa fa-linkedin\"\n      },\n      {\n        \"name\":\"github\",\n        \"url\":\"https://github.com/rbalaji3\",\n        \"className\":\"fa fa-github\"\n      }\n      \n    ],\n  \"aboutme\":\" I am currently a Sophomore at the University of Illinois at Urbana-Champaign, studying Computer Science and Mathematics. I am extremely passionate in fields such as Machine Learning, Computer Vision, and Cyber Security. I have followed my passions by working as an undergraduate researcher in the Computer Vision group in UIUC as well as the Social Research and Technology Innovation Lab at UIUC. I have also worked as a Software Engineering Intern specializing in Machine Learning at Wave Computing. I am inquisitive, motivated, and a hard worker, looking to make an impact on the world! \",\n  \"website\":\"https://rbhatia46.github.io\",\n  \"education\":[\n    {\n      \"UniversityName\":\"University of Illinois at Urbana-Champaign\",\n      \"specialization\":\"Computer Science and Mathematics\",\n      \"MonthOfPassing\":\"Graduating May\",\n      \"YearOfPassing\":\"2022\",\n    },\n  ],\n  \"work\":[\n    {\n      \"CompanyName\":\"Wave Computing\",\n      \"specialization\":\"Software Engineering Intern (Machine Learning)\",\n      \"MonthOfLeaving\":\"May 2019 - \",\n      \"YearOfLeaving\":\"Aug 2019\",\n      \"Achievement1\": \"Designed and implemented multiple convolutional neural networks forimage detection and semantic segmentation.\",\n      \"Achievement2\": \"Constructed and optimized a single-shot image detector for use in retail stores to acquire and analyze product data through security camera footage\",\n      \"Achievement3\": \"Developed mask prediction model for dense object detection and semantic segmentation to process surroundings for autonomous vehicles, increasing accuracy by 20% while decreasing computational cost\",\n      \"Achievement4\": \"Constructed a web application to visualize incoming data streams for customers in an easy and accurate fashion leveraging MatPlotLib and Tableau\"\n    },\n    {\n      \"CompanyName\":\"Imagination Technologies\",\n      \"specialization\":\"Software Engineering Intern\",\n      \"MonthOfLeaving\":\"May 2017 -\",\n      \"YearOfLeaving\":\"Aug 2017\",\n      \"Achievement1\":\"Collaborated with lead software engineer in developing Voice over IP software and cloud computing applications while utilizing technologies such as Python, HTML5, CSS, and JavaScript\",\n      \"Achievement2\":\"Developed a MySQL database system with a Python Flask interface to manage back-end testing data while also organizing incoming data\"\n     \n\n    }\n  ],\n  \"research\":[\n    {\n      \"CompanyName\":\"University of Illinois Computer Vision Group\",\n      \"specialization\":\"Undergraduate Researcher\",\n      \"MonthOfLeaving\":\"Aug 2019 - \",\n      \"YearOfLeaving\":\"Present\",\n      \"Achievement1\": \"Engineering a convolutional neural network to analyze human-object interactions on a given image, by examining various interactions between unique human poses and object types, using Python, Pytorch, and the HICO-DET Dataset\",\n      \"Achievement2\": \"Researching under Professor Derek Hoiem to optimize existing models by adding convolutional layers and various feature transformers to detect human-object interactions\"\n      \n    },\n    {\n      \"CompanyName\":\"University of Illinois: SRTI Labs\",\n      \"specialization\":\"Software Developer\",\n      \"MonthOfLeaving\":\"Sept 2019 - \",\n      \"YearOfLeaving\":\"Dec 2019\",\n      \"Achievement1\": \"Developed algorithm using OpenCV and Amazon Kinesis to extract features from video streams to identify vehicle traffic across campus\",\n      \"Achievement2\": \"Drove and project managed a team in building a full-stack web application to display university traffic analytics using Python and JavaScript\"\n    }\n\n    \n  ],\n  \"skills\":[\n    {\n      \"CompanyName\":\"Programming Languages\",\n      \"Element1\": \"Java, C++, C, Python, JavaScript\"    \n    },\n    {\n      \"CompanyName\":\"Web Programming\",\n      \"Element1\": \"HTML, CSS, Node.js, React.js\",\n    },\n    {\n      \"CompanyName\":\"Machine Learning Technologies\",\n      \"Element1\": \"Tensoflow, Pytorch, Caffe, Keras, OpenCV\"       \n    },\n    {\n      \"CompanyName\":\"Other tools and technologies\",\n      \"Element1\": \"Kubernetes(K8), Docker, MIPS, Shell, Unix, Tableau, AWS\",       \n    }\n  ]\n  \n}\n\nexport default resumeData","import React, { Component } from 'react';\nimport Resume from './Resume';\nimport resumeData from './resumeData';\n\n\nexport default class About extends Component {\n  render() {\n   let resumeData = this.props.resumeData;\n   return (\n     <section id=\"about\">\n        <div className=\"row\">\n\n           <div className=\"three columns\">\n\n              <img className=\"profile-pic\"  src=\"images/profilepic.jpg\" alt=\"\" />\n           </div>\n\n           <div className=\"nine columns main-col\">\n\n              <h2>About Me</h2>\n              <p style={{ color: 'white' }}>\n              {\n                resumeData.aboutme\n              }\n              </p>\n\n             \n           </div>\n        </div>\n     </section>\n   );\n }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Projects from './Projects';\n\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <div\n      style={{\n        Color: 'white',\n        width: '100px',\n        height: '100px'\n      }}\n    />\n   \n  );\n    \n}}","import React, { Component } from 'react';\nexport default class Testimonials extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"testimonials\">\n        <div className=\"text-container\">\n          <div className=\"row\">\n            <div className=\"two columns header-col\">\n              <h1><span>Client Testimonials</span></h1>\n            </div>\n            <div className=\"ten columns flex-container\">\n              <div className=\"flexslider\">\n                <ul className=\"slides\">\n                  {\n                    resumeData.testimonials && resumeData.testimonials.map((item)=>{\n                      return(\n                        <li>\n                          <blockquote>\n                            <p>\n                            {item.description}\n                            </p>\n                            <cite>{item.name}</cite>\n                          </blockquote>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div> {/* div.flexslider ends */}\n            </div> {/* div.flex-container ends */}\n          </div> {/* row ends */}\n        </div>  {/* text-container ends */}\n      </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head\">\n            <div className=\"ten columns\">\n              <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4>Linked in :\n                  {resumeData.linkedinId}\n                </h4>\n              </div>\n            </aside>\n          </div>\n        </section>\n        );\n  }\n}","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Portfolio from './components/Portfolio';\nimport Testimonials from  './components/Testimonials';\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport Resume from './components/Resume';\n\nimport resumeData from './components/resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        {/* <Portfolio resumeData={resumeData}/> */}\n        {/* <ContactUs resumeData={resumeData}/> */}\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}